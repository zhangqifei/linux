
# uptime														查看系统运行时间、用户数、负载
17:44:31 up 1 day, 14:48,  1 user,  load average: 0.00, 0.01, 0.00
# grep processor /proc/cpuinfo

为什么会有三个数字呢？你从手册中查到，它们的意思分别是1分钟、5分钟、15分钟内系统的平均负荷。
如果你继续看手册，它还会告诉你，当CPU完全空闲的时候，平均负荷为0；当CPU工作量饱和的时候，平均负荷为1。
那么很显然，"load average"的值越低，比如等于0.2或0.3，就说明电脑的工作量越小，系统负荷比较轻。

三、系统负荷的经验法则
当这个值达到0.7，就应当引起注意了。
当系统负荷持续大于0.7，你必须开始调查了，问题出在哪里，防止情况恶化。
当系统负荷持续大于1.0，你必须动手寻找解决办法，把这个值降下来。
当系统负荷达到5.0，就表明你的系统有很严重的问题，长时间没有响应，或者接近死机了。你不应该让系统达到这个值。

在Linux系统中，我们一般使用uptime命令查看（w命令和top命令也行）。




# cat /proc/loadavg 
4.61 4.36 4.15 9/84 5662

每个值的含义为：
参数 解释
lavg_1 (4.61) 			1-分钟平均负载
lavg_5 (4.36) 			5-分钟平均负载
lavg_15(4.15) 			15-分钟平均负载
nr_running (9) 		在采样时刻，运行队列的任务的数目，与/proc/stat的procs_running表示相同意思
nr_threads (84) 		在采样时刻，系统中活跃的任务的个数（不包括运行已经结束的任务）
last_pid(5662) 		最近运行的进程ID号。

后面两个呢，一个的分子是正在运行的进程数，分母是进程总数；另一个是最近运行的进程ID号

假设当前有两个CPU，则每个CPU的当前任务数为4.61/2=2.31


多处理器
上面，我们假设你的电脑只有1个CPU。如果你的电脑装了2个CPU，会发生什么情况呢？
2个CPU，意味着电脑的处理能力翻了一倍，能够同时处理的进程数量也翻了一倍。
还是用大桥来类比，两个CPU就意味着大桥有两根车道了，通车能力翻倍了。
所以，2个CPU表明系统负荷可以达到2.0，此时每个CPU都达到100%的工作量。推广开来，n个CPU的电脑，可接受的系统负荷最大为n.0。
多核处理器
芯片厂商往往在一个CPU内部，包含多个CPU核心，这被称为多核CPU。
在系统负荷方面，多核CPU与多CPU效果类似，所以考虑系统负荷的时候，必须考虑这台电脑有几个CPU、每个CPU有几个核心。然后，把系统负荷除以总的核心数，只要每个核心的负荷不超过1.0，就表明电脑正常运行。
怎么知道电脑有多少个CPU核心呢？"cat /proc/cpuinfo"命令，可以查看CPU信息，用以下命令直接返回CPU的总核心数。
# grep -c 'model name' /proc/cpuinfo
最佳观察时长
最后一个问题，"load average"一共返回三个平均值----1分钟系统负荷、5分钟系统负荷，15分钟系统负荷，----应该参考哪个值？
如果只有1分钟的系统负荷大于1.0，其他两个时间段都小于1.0，这表明只是暂时现象，问题不大。
如果15分钟内，平均系统负荷大于1.0（调整CPU核心数之后），表明问题持续存在，不是暂时现象。所以，你应该主要观察"15分钟系统负荷"，将它作为电脑正常运行的指标。


系统负荷的经验法则
(1) 主要观察"15分钟系统负荷"，将它作为电脑正常运行的指标。
(2) 如果15分钟内，（系统负荷除以CPU核心数目之后的）平均负荷大于1.0，表明问题持续存在，不是暂时现象。
(3) 当系统负荷持续大于0.7，你必须开始调查了，问题出在哪里，防止情况恶化。
(4) 当系统负荷持续大于1.0，你必须动手寻找解决办法，把这个值降下来。
(5) 当系统负荷达到5.0，就表明你的系统有很严重的问题，长时间没有响应，或者接近死机了。
http://huangrs.blog.51cto.com/2677571/788379




















