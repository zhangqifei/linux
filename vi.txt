
gg顶部
shift+g底部
yy    复制当前行 
p    在光标所在位置后粘贴复的内容 
u 取消最近一次操作
U 取消所有操作
Ctrl+R 恢复对u命令的操作
.  重复上一个编辑操作
1G    移动到文件首行的句首 
G    移动到文件末行的行首 
nG    移动到文件第n行的行首
nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。

复制粘贴
nyy    复制当前行开始n行 
np    在光标所在位置后粘贴复的内容，粘贴n次 

y0    从光标开始复制到行首 
y$    从光标开始复制到行尾 

yw    将光标所在位置到字尾的字符复制到缓冲区中,y是yank的首字母 
nyw    将光标所在位置到n个字尾的字符复制到缓冲区中,y是yank的首字母 
yb    从光标开始向左复制一个字 
nyb    从光标开始向左复制n个字 

命令行方式复制
:n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下
:n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下


按ESC键 跳到命令模式，然后：
:e! 	重新载入文件 放弃所有修改，从上次保存文件开始再编辑
:w   保存文件但不退出vi
:w file 将修改另外保存到file中，不退出vi
:w!   强制保存，不推出vi
:wq  保存文件并退出vi
:wq! 强制保存文件，并退出vi
:q  不保存文件，退出vi
:q! 不保存文件，强制退出vi

vi保存退出":x"与":wq"的区别 
习惯使用":x"命令来保存文件并退出，不愿意使用":wq"命令是因为它得多敲一个字母。
但是，今天我才知道":x"和":wq"的真正区别，如下：
:wq   强制性写入文件并退出。即使文件没有被修改也强制写入，并更新文件的修改时间。
:x    写入文件并退出。仅当文件被修改时才写入，并更新文件修改时间，否则不会更新文件修改时间。
这两者一般情况下没什么不一样，但是在编程方面，对编辑源文件可能会产生重要影响。因为文件即使没有修改，":wq"强制更新文件的修改时间


vi filename :打开或新建文件，并将光标置于第一行首
vi +n filename ：打开文件，并将光标置于第n行首
vi + filename ：打开文件，并将光标置于最后一行首
vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处
vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename
vi filename….filename ：打开多个文件，依次进行编辑

屏幕翻滚类命令
Ctrl+D 显示文件中的下半屏文本 
Ctrl+U 显示文件中的上半屏文本 
Ctrl+F 显示文件中的下一屏文本 
Ctrl+B 显示文件中的上一屏文本
H ：光标移至屏幕顶行
M ：光标移至屏幕中间行
L ：光标移至屏幕最后行
J: 合并一行
xp: 对调字符

移动光标类命令
60gg:跳到60行
h ：光标左移一个字符
l ：光标右移一个字符
space：光标右移一个字符
Backspace：光标左移一个字符
k或Ctrl+p：光标上移一行
j或Ctrl+n ：光标下移一行
Enter ：光标下移一行
w或W ：光标右移一个字至字首
b或B ：光标左移一个字至字首
e或E ：光标右移一个字至字尾
) ：光标移至句尾
( ：光标移至句首
}：光标移至段落开头
{：光标移至段落结尾
nG：光标移至第n行首
n+：光标下移n行
n-：光标上移n行
n$：光标移至第n行尾
0：（注意是数字零）光标移至当前行首
$：光标移至当前行尾
%     可以查找配对的括号 )、]、}
k或Ctrl+p: 光标上移一行 
j或Ctrl+n: 光标下移一行 
Enter: 光标下移一行

插入文本类命令
i ：在光标前
I ：在当前行首
a：光标后
A：在当前行尾
o：在当前行之下新开一行
O：在当前行之上新开一行
r：替换当前字符
R：替换当前字符及其后的字符，直至按ESC键
s：从当前光标位置处开始，以输入的文本替代指定数目的字符
S：删除指定数目的行，并以所输入文本代替之
ncw或nCW：修改指定数目的字
nCC：修改指定数目的行


删除命令
ndw或ndW：删除光标处开始及其后的n-1个字
do：删至行首
d$：删至行尾
ndd：删除当前行及其后n-1行
x或X：删除一个字符，x删除光标后的，而X删除光标前的
Ctrl+u：删除输入方式下所输入的文本
d(    删除光标到句首所有字符 
d)    删除光标到句尾所有字符 
d{    删除光标到段首所有字符 
d}    删除光标到段尾所有字符

搜索及替换命令
/pattern：从光标开始处向文件尾搜索pattern
?pattern：从光标开始处向文件首搜索pattern
n：在同一方向重复上一次搜索命令
N：在反方向上重复上一次搜索命令

：%s/vivian/sky/（等同于 ：g/vivian/s//sky/） 替换每一行的第一个 vivian 为 sky 		
：%s/vivian/sky/g（等同于 ：g/vivian/s//sky/g） 替换每一行中所有 vivian 为 sky 
：s/p1/p2/：将当前行中第一个p1均用p2替代
：s/p1/p2/g：将当前行中所有p1均用p2替代
：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代

选项设置
all：列出所有选项设置情况
term：设置终端类型
ignorance：在搜索中忽略大小写
list：显示制表位(Ctrl+I)和行尾标志（$)
number：显示行号
report：显示由面向行的命令修改过的数目
terse：显示简短的警告信息
warn：在转到别的文件时若没保存当前文件则显示NO write信息
nomagic：允许在搜索模式中，使用前面不带“\”的特殊字符
nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始
mesg：允许vi显示其他用户用write写到自己终端上的信息

最后行方式命令
：n1,n2 d ：将n1行到n2行之间的内容删除
：e filename：打开文件filename进行编辑
：!command：执行shell命令command
：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入
：r!command：将命令command的输出结果放到当前行

寄存器操作
“?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字
“?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字
“?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字
“?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字
ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。

:set number 将行号作为屏幕显示的一部分，但是行号并不是文件的一部分。它的缩写形式为:set nu 
:set nonumber 清除屏幕上的行号。也可以使用缩写形式:set nonu 
:set showmode 在屏幕的右下角显示追加模式信息 
:set list 在每行的行末显示美元符号，并用Ctrl+I表示制表符 
:set showmatch 在输入）或］时，将光标移到与之匹配的（或[ 
:set window=value 定义屏幕上显示的文本行的行数 
:set autoindent 自动缩进。也可以使用缩写形式:set ai 
:set tabstop=value 设置显示制表符的空格字符个数。也可以使用缩写形式ts=value 
:set wrapmargin=value 设置显示器的右页边。当输入进入所设置的页边时，编辑器自动回车换行 
:set ignorecase 指示编辑器搜索字符串，并忽略目标中字母的大小写 
:set 显示设置的所有选项 
:set all 显示所有可以设置的选项 

Linux下执行.sh脚本错误：bin/sh^M: bad interpreter: No such file or directory
原因是.sh脚本在Windows系统下用记事本文件编写的。不同系统的编码格式引起的。
转行文件的编码格式：

利用如下命令查看文件格式 
:set ff 或 :set fileformat 
可以看到如下信息 
fileformat=dos 或 fileformat=unix 
利用如下命令修改文件格式 
:set ff=unix 或 :set fileformat=unix 
:wq (存盘退出)


vi中不区分大小写查找的两种方法
:set ignorecase 
:set ic
如果返回默认区分大小写, 那么如下设置:
:set noignorecase
:set noic
:set hlsearch 
或是在~/.vimrc里加上一行： 
set hlsearch
不想要高亮
set nohlsearch


恢复文件
文件在编辑中会产生一个临时文件，文件以.开头并以.swp结尾。在异常退出的时候，系统在下一次编辑的时候会提示命令处理。
O 只读打开
E 继续编辑，不恢复.swp文件
R 恢复文件，继续编辑
Q 退出vi
D 删除.swp文件
vi -i [文件名] 恢复.swp文件


>	增加缩进,"x>"表示增加以下x行的缩进
<	减少缩进,"x<"表示减少以下x行的缩进









