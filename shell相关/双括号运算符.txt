

# [ 100 -gt 99 ] && date
# [[ 100 -gt 99 ]] && date
# ((100>99)) && date

# [[ "zoo" = z* ]] && date				模式匹配，以z开头
# [[ "zoo" = "z*" ]] && date			字符匹配
# [[ zoom == z**m ]] && date
# [[ zoom == z??m ]] && date

在bash中，数字的比较最好使用 (( ))
使用 (( )) 时，不需要空格分隔各值和运算符，使用 [[ ]] 时需要用空格分隔各值和运算符。

1 整数比较
-eq       等于,如:if [ "$a" -eq "$b" ]
-ne       不等于,如:if [ "$a" -ne "$b" ]
-gt       大于,如:if [ "$a" -gt "$b" ]
-ge       大于等于,如:if [ "$a" -ge "$b" ]
-lt       小于,如:if [ "$a" -lt "$b" ]
-le       小于等于,如:if [ "$a" -le "$b" ]
<       小于(需要双括号),如:(("$a" < "$b"))
<=       小于等于(需要双括号),如:(("$a" <= "$b"))
>       大于(需要双括号),如:(("$a" > "$b"))
>=       大于等于(需要双括号),如:(("$a" >= "$b"))

数字的运算可使用let、(( )) ，其中运算时不需要变量$符号，运算符为 +、-、*、/、% ，不建议使用expr
数字的比较使用 (( )) ，其运算符 >、>=、<、<=、==、!=
可以使用算术扩展，如：(( 99+1 <= 101 ))
字符表达式的比较使用 [[ ]] ，其运算符 =、!=、-n、-z
文件表达式的测试使用 [[ ]] ，其运算符 -r、-l、-w、-x、-f、-d、-s、-nt、-ot
逻辑表达式的测试使用 [[ ]] ，其运算符 !、&&、||
数字比较、字符比较、逻辑测试可以组合，如$ [[ "a" != "b" && 4 -gt 3 ]]
支持bash中的通配符扩展，如：[[ hest = h??t ]] 、[ hest = h*t ]]
使用 (( )) 时，不需要空格分隔各值和运算符，使用 [[ ]] 时需要用空格分隔各值和运算符。




((表达式1,表达式2…))
在双括号结构中，所有表达式可以像c语言一样，如：a++,b--等。
在双括号结构中，所有变量可以不加入：“$”符号前缀。
双括号可以进行逻辑运算，四则运算
双括号结构 扩展了for，while,if条件测试运算
支持多个表达式运算，各个表达式之间用“，”分开
双括号结构之间支持多个表达式，然后加减乘除等c语言常用运算符都支持。如果双括号带：$，将获得表达式值，赋值给左边变量。








http://www.51testing.com/html/01/7701-13731.html
http://www.cnblogs.com/chengmo/archive/2010/10/19/1855577.html
http://www.cnblogs.com/include/archive/2011/12/09/2307905.html
http://www.cnblogs.com/gx-303841541/archive/2012/10/25/2740324.html






