
标准输入输出  交互式硬件设备：　
标准输入：从该设备接收用户输入的数据
标准输出：通过该设备向用户输出数据
标准错误：通过该设备报告执行出错信息
类型	设备文件	文件描述编号	默认设备
标准输入	/dev/stdin	0	键盘
标准输出	/dev/stdout	1	显示器
标准错误输出	/dev/stderr	2	显示器
（备注：/dev/stdin、/dev/stdout、/dev/stderr这三个文件是一个符号链接，输入输出与重定向关系紧密）

重定向操作
改变标准输入、标准输出、标准错误的方向：

类型	操作符	用途
重定向标准输入	<	将命令中接收输入的途径由默认的键盘更改为指定的文件
重定向标准输出	>	将命令的执行结果输出到指定的文件中，而不是直接显示在屏幕上
	>>	将命令执行的结果追加输出到指定文件
重定向标准错误	2>	清空指定文件的内容，并将标准错误信息保存到该文件中
	2>>	将标准错误信息追加输出到指定的文件中
重定向标准输出和标准错误	&>	将标准输出、标准错误的内容全部保存到指定的文件中，而不是直接显示在屏幕上
将标准输出重定向到标准错误输出	1>&2	
将标准错误输出重定向到标准输出	2>&1	


Linux shell下"2>&1"的含义 2>&1 的意思就是将标准错误也输出到标准输出当中。

$ cat test.sh
t
date
test.sh中包含两个命令，其中t是一个不存在的命令，执行会报错，默认情况下，错误会输出到stderr。date则
能正确执行，并且输出时间信息，默认输出到stdout

./test.sh > test1.log
./test.sh: line 1: t: command not found
$ cat test1.log
Tue Oct 9 20:51:50 CST 2007
可以看到，date的执行结果被重定向到log文件中了，而t无法执行的错误则只打印在屏幕上。

$ ./test.sh > test2.log 2>&1
$ cat test2.log
./test.sh: line 1: t: command not found
Tue Oct 9 20:53:44 CST 2007
这次，stderr和stdout的内容都被重定向到log文件中了。
实际上， > 就相当于 1> 也就是重定向标准输出，不包括标准错误。通过2>&1，就将标准错误重定向到标准输
出了，那么再使用>重定向就会将标准输出和标准错误信息一同重定向了。如果只想重定向标准错误到文件中，
则可以使用2> file。

当普通用户使用“find”命令来查询文件目录时，出现"Permissiondenied."字样。 系统将无法查询到你想要的文件。为了避免这样的错误，我们可是使用转移错误提示的方法尝试着查找文件，输入
# find / -name access_log 2>/dev/null
这个方法是把查找错误提示转移到特定的目录中去。/dev/null是一个特殊的文件，表明空的或者错误的信息，这样查询到的错误信息将被转移了，不会再显示了。












