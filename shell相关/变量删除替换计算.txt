# eric=123;eric4='eric';eric56=$(pwd);ericdd=$SHELL;
# echo ${!eric@}  		eric eric4 eric56 ericdd
# echo ${!er*}			eric eric4 eric56 ericdd

${!varprefix*}与${!varprefix@}相似，可以通过变量名前缀字符，搜索已经定义的变量,无论是否为空值。
${!varprefix*}	匹配之前所有以varprefix开头进行声明的变量
${!varprefix@}	匹配之前所有以varprefix开头进行声明的变量


变量可以通过${变量:起始位置:截取长度}的形式，过行取子串操作。如果从起始位置取至字串尾，则截取长度可以省略。
test="12345679"
echo ${#test}		# ${#变量名}得到字符串长度
echo ${test:1:3}    # 输出234
echo ${test:2}    # 输出3456789

IPTABLES=iptables;
echo ${IPTABLES%tables}		# ip

test='c:/windows/boot.ini'
echo ${test#/}		# c:/windows/boot.ini	从前面最小删除
echo ${test#*/}		# windows/boot.ini	
echo ${test##*/}	# boot.ini	从前面最大删除
echo ${test%/*}		# c:/windows	从后面最小删除
echo ${test%%/*}	# c:	从后面最大删除

${变量/查找/替换值} 一个“/”表示替换第一个，”//”表示替换所有,当查找中出现了：”/”请加转义符”\/”表示。
echo ${test/\//\\}		# c:\windows/boot.ini
echo ${test//\//\\}		# c:\windows\boot.ini


${变量:-字串}  如果变量存在且有值，返回变量值，否则返回字串内容。
${变量:=字串}  如果变量存在且有值，返回变量值，否则将字串赋给变量，并返回字串内容。
${变量:?字串}  如果变量存在且有值，返回变量值，否则显示将字串作为错误信息显示，并退出script执行。
${变量:+字串}  如果变量存在且有值，返回字串内容，否则返回空值。
注：去掉命令中的:，则只检测变量是否存在，不检测是否为空。

变量可以通过命令对其字串值进这行删除替换处理，列表如下：
${#string}	$string的长度
${string:position}	在$string中, 从位置$position开始提取子串
${string:position:length}	在$string中, 从位置$position开始提取长度为$length的子串
${string#substring}	从变量$string的开头, 删除最短匹配$substring的子串
${string##substring}	从变量$string的开头, 删除最长匹配$substring的子串
${string%substring}	从变量$string的结尾, 删除最短匹配$substring的子串
${string%%substring}	从变量$string的结尾, 删除最长匹配$substring的子串
${string/substring/replacement}	使用$replacement, 来代替第一个匹配的$substring
${string//substring/replacement}	使用$replacement, 代替所有匹配的$substring
${string/#substring/replacement}	如果$string的前缀匹配$substring, 那么就用$replacement来代替匹配到的$substring
${string/%substring/replacement}	如果$string的后缀匹配$substring, 那么就用$replacement来代替匹配到的$substring















