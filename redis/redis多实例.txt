
单线程的Redis怎样利用多台CPU？
我们知道Redis是用"单线程-多路复用io模型"来实现高性能的内存数据服务的，这种机制避免了使用锁，但是同时这种机制在进行sunion之类的比较耗时的命令时会使redis的并发下降。
因为是单一线程，所以同一时刻只有一个操作在进行，所以，耗时的命令会导致并发的下降，不只是读并发，写并发也会下降。
而单一线程也只能用到一个cpu核心，所以可以在同一个多核的服务器中，可以启动多个实例，组成master-master或者master-slave的形式，耗时的读命令可以完全在slave进行。
需要改的redis.conf以下3项
pidfile /var/run/redis/redis_6380.pid
port 6380
logfile /var/log/redis/redis_6380.log
dbfilename dump6380.rdb				这行可以不设置，多实例共用一个数据库

启动关闭
# redis-server /etc/redis6380.conf
# redis-cli -p 6380 shutdown
登录
# redis-cli -p 6380

redis单主机多实例
Redis最大内存设置在配置文件中由maxmemory选项指定，具体值为字节为单位，由于Redis是单线程的，所以通常大内存机器上推荐开启多个daemon分别分配小内存。这样能够更好的利用多核
redis 程序运行过程并不会消耗太多的 CPU 和 IO 资源（主要消耗memory），如是在单台机器上如果只启用一个redis实例会造成资源浪费 。
同时为了增加可用性，一般也不会在单机上只运行一个redis实例，本篇就介绍下，如何在单上运行多个 redis 实例（运行在不同端口）

http://blog.csdn.net/qidong7/article/details/52205332
http://www.cnblogs.com/super-d2/p/3855229.html


单线程和多线程是什么意思
打个比方，单线程就是你去厨房有烧饭又烧菜，一个人来回跑；多线程就是两个人，一个单做饭，一个单做菜。这样的解释应该比纯理论的好理解一点吧？
再补充一下，多线程就是一个CPU虚拟了几个CPU，而双核就是实际上就有两个线程了，当然，还可以每个核再去虚拟多个线程