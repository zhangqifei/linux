
# httpd -l  							如果找到 prefork.c 则表示当前工作在prefork模式，同理出现worker.c则工作在worker模式。

apache 更改worker模式  
# service httpd stop					先停止httpd服务
# vi /etc/sysconfig/httpd				打开此文件，修改以下，去掉以下行的注释
HTTPD=/usr/sbin/httpd.worker
# service httpd start					重启httpd

# ps aux | grep httpd |grep -v grep | wc –l			查看apache开启的进程数
# pgrep httpd|wc –l								同上 
# ps aux|grep -v grep|awk '/httpd/{sum+=$6;n++};END{print sum/n}'		计算httpd占用内存的平均数


StartServers 5              启动时生成的进程数
MinSpareServers 5        最小空闲线程数
MaxSpareServers 10     最大空闲线程数
MaxClients 150            客户端最大并发连接数
MaxRequestsPerChild 0 子进程可处理的请求数，0意味着无限,可能会出现内存溢出，建议不要使用0

以前apache主流模式为prefork，现在worker模式也开始多了起来，区别来说，worker模式可以应对高流量，但是安全性不太好；
prefork模式安全性比较好，但是性能会差一点，各位可以根据自己服务器的类别 选取不同的模式，更好的使用apache。

apache作为现今web服务器用的最广泛也是最稳定的开源服务器软件，其工作模式有许多中，目前主要有两种模式：prefork模式和worker模式
prefork模式:
这个多路处理模块(MPM)实现了一个非线程型的、预派生的web服务器，它的工作式类似于Apache 1.3。它适合于没有线程安全库，需要避免线程兼容性问题的系统。它要求将每个请求相互独立的情况下最好的MPM，这样若一个请求出现问题就不会影响到其他请求。
这个MPM具有很强的自我调节能力，只需要很少的配置指令调整。最重要的是将MaxClients设置为一个足够大的数值以处理潜在的请求高峰，同时又不能太大，以致需要使用的内存超出物理内存的大小。
worker模式:
此多路处理模块(MPM)使网络服务器支持混合的多线程多进程。由于使用线程来处理请求，所以可以处理海量请求，而系统资源的开销小于基于进程的MPM。但是它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。
控制这个MPM的最重要的指令是，控制每个子进程允许建立的线程数ThreadsPerChild指令，和控制允许建立的总线程数的MaxClients指令。
如果apache还未安装，我们在编译的时候可以加入 --with-pem=(prefork|worker)选项决定启用什么模式。
当然如果你安装过了(笔者模式为prefork) 也可以使用以下命令来切换
# mv httpd httpd.prefork
# mv httpd.worker httpd
重启之后，模式就会改变。

# ./apachectl –l	 查看apache工作方式
# httpd –l  	查处apche的工作模，prefork模式和worker模式

以前一直在用Apache，却也一直不知道它有那么多的工作模式，看了手册才知道，囧！
在这里我就prefork和worker两种最为常用的工作模式进行比较：
prefork–Unix平台上的默认（缺省）MPM，使用多个子进程，每个子进程只有一个线程。每个进程在某个确定的时间只能维持一个连接，效率高，但内存占用量比较大。
worker–使用多个子进程，每个子进程有多个线程，每个线程在某个确定的时间只能维持一个连接，内存占用量比较小，适合高流量的http服务器。缺点是假如一个线程崩溃，整个进程就会连同其任何线程一起”死掉”，所以要保证一个程式在运行时必须被系统识别为”每 个线程都是安全的”。
了解了这些个之后，怎么才能知道你的Apache服务器工作在什么状态呢？使用“apachectl -l”命令就可以显示出来。
Apache的默认的工作模式为prefork，如何把它改成worker模式呢？
如果你还未编译安装，那就简单了，在编译的时候加个参数 “–with-mpm=worker”，就好了；

如果你想更改正在运行的Apache的工作模式：

apache 更改worker模式  
# service httpd stop					先停止httpd服务
# vi /etc/sysconfig/httpd				打开此文件，修改以下，去掉以下行的注释
HTTPD=/usr/sbin/httpd.worker
# service httpd start					重启httpd






























